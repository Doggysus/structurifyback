plugins {
	id 'java'
	id 'idea'
	id 'dev.architectury.loom'
	id 'architectury-plugin'
	id 'com.github.johnrengelman.shadow'
}

def subproject = stonecutter.current.project
def minecraftVersion = stonecutter.current.version
def prop(String name) {
	return rootProject.project(stonecutter.current.project).property(name).toString()
}

architectury {
	platformSetupLoomIde()
	neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }

    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraftVersion}"
	mappings "net.fabricmc:yarn:${prop('yarn_mappings')}:v2"

	neoForge "net.neoforged:neoforge:${prop('neoforge_version')}"

	common(project(path: ":common:$subproject", configuration: 'namedElements')) { transitive false }
	shadowBundle project(path: ":common:$subproject", configuration: 'transformProductionNeoForge')
}

processResources {
	inputs.property "modId", prop('mod_id')
	inputs.property "modVersion", prop('mod_version')
	inputs.property "modName", prop('mod_name')
	inputs.property "modDescription", prop('mod_description')
	inputs.property "modAuthor", prop('mod_author')
	inputs.property "minecraftVersion", prop('minecraft_version')
	inputs.property "neoForgeVersion", prop('neoforge_version')

	filesMatching("META-INF/mods.toml") {
		expand "modId": prop('mod_id'),
			"modVersion": prop('mod_version'),
			"modName": prop('mod_name'),
			"modDescription": prop('mod_description'),
			"modAuthor": prop('mod_author'),
			"minecraftVersion": prop('minecraft_version'),
			"neoForgeVersion": prop('neoforge_version')
	}
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

repositories {
	maven {
		name 'CurseForge'
		url "https://www.cursemaven.com"
	}

	maven {
		name 'Modrinth'
		url 'https://api.modrinth.com/maven'
	}

	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}

	maven {
		name = "TerraformersMC"
		url "https://maven.terraformersmc.com/releases/"
	}

	// NeoForge
	maven { url 'https://maven.neoforged.net/releases/' }

	// Mod Menu.
	maven { url 'https://maven.terraformersmc.com' }

	// Jitpack for Mixin Extras.
	maven {
		url 'https://jitpack.io'
		content {
			includeGroup 'com.github.llamalad7'
		}
	}

	// YACL
	maven { url "https://maven.isxander.dev/releases" }

	// YACL dep
	maven {
		name = 'kotlinforforge'
		url = 'https://thedarkcolour.github.io/KotlinForForge/'
	}

	// Mod Menu
	maven { url "https://maven.terraformersmc.com/releases" }
	maven  { url "https://maven.terraformersmc.com" }
	maven  { url "https://maven.isxander.dev/releases" }
	maven  { url "https://maven.isxander.dev/snapshots" }
	maven  { url "https://maven.quiltmc.org/repository/release" }
	maven  { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven  { url "https://maven.neoforged.net/releases/" }
}