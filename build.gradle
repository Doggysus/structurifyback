plugins {
	id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
	id 'architectury-plugin' version '3.4-SNAPSHOT'
	id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
	id "io.github.pacifistmc.forgix" version "1.2.6"
}

architectury {
	minecraft = project.minecraft_version
}


allprojects {
	group = rootProject.maven_group
	version = rootProject.mod_version
}

subprojects {
	apply plugin: 'dev.architectury.loom'
	apply plugin: 'architectury-plugin'
	apply plugin: 'maven-publish'

	base {
		archivesName = "$rootProject.mod_id-$project.name"
	}

	repositories {
	}

	dependencies {
		minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
		mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
	}

	java {
		withSourcesJar()

		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release = 17
	}
}

forgix {
	group = "com.faboslav.structurized"
	mergedJarName = "${rootProject.mod_id}-mc${rootProject.minecraft_version}-${rootProject.mod_version}.jar"
	outputDir = "build/libs/merged"

	if (findProject(":fabric"))
		fabric {
			projectName = "fabric"
			jarLocation = "build/libs/${rootProject.mod_id}-fabric-mc${rootProject.minecraft_version}-${rootProject.mod_version}.jar"
		}

	if (findProject(":forge"))
		forge {
			projectName = "forge"
			jarLocation = "build/libs/${rootProject.mod_id}-forge-mc${rootProject.minecraft_version}-${rootProject.mod_version}.jar"
		}

	if (findProject(":neoforge"))
		custom {
			projectName = "neoforge"
			jarLocation = "build/libs/${rootProject.mod_id}-neoforge-mc${rootProject.minecraft_version}-${rootProject.mod_version}.jar"
		}
}