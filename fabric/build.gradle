plugins {
	id "com.github.johnrengelman.shadow" version "8.1.1"
}

allprojects {
	archivesBaseName = "${rootProject.mod_id}-fabric-mc${rootProject.minecraft_version}"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
	// Core dependencies
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
	modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

	// Mod menu (https://modrinth.com/mod/modmenu)
	modImplementation("com.terraformersmc:modmenu:${mod_menu_version}") { transitive = false }

	// YetAnotherConfigLib (https://docs.isxander.dev/yet-another-config-lib)
	modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${yacl_version}"

	// Compat
	modCompileOnly ("curse.maven:global-datapacks-594773:4706699")
	modCompileOnly ("curse.maven:drp-global-datapack-317134:4570601")
	modCompileOnly ("curse.maven:paxi-418881:4749995")
	modApi ("com.yungnickyoung.minecraft.yungsapi:YungsApi:${yungsapi_mc_version}-Fabric-${yungsapi_version}")

	common(project(path: ':common', configuration: 'namedElements')) { transitive false }
	shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

processResources {
	inputs.property 'modId', mod_id
	inputs.property 'modName', mod_name
	inputs.property 'modDescription', mod_description
	inputs.property 'modVersion', mod_version
	inputs.property 'modAuthor', mod_author
	inputs.property "minecraftVersion", min_minecraft_version
	inputs.property "fabricLoaderVersion", fabric_loader_version
	inputs.property "fabricApiVersion", fabric_api_version

	filesMatching("fabric.mod.json") {
		expand([
			'modId'              : mod_id,
			'modName'            : mod_name,
			'modDescription'     : mod_description,
			'modVersion'         : mod_version,
			'modAuthor'          : mod_author,
			"minecraftVersion"   : min_minecraft_version,
			"fabricLoaderVersion": fabric_loader_version,
			"fabricApiVersion"   : fabric_api_version
		])
	}
}

shadowJar {
	configurations = [project.configurations.shadowBundle]
	archiveClassifier = 'dev-shadow'
}

remapJar {
	input.set shadowJar.archiveFile
}

repositories {
	maven {
		name 'CurseForge'
		url "https://www.cursemaven.com"
	}

	maven {
		name 'Modrinth'
		url 'https://api.modrinth.com/maven'
	}

	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}

	maven {
		name = "TerraformersMC"
		url "https://maven.terraformersmc.com/releases/"
	}
}